
% FACT: program(program_id, program_name, qualified_program_name, begin_annotation_id, end_annotation_id).
program(1, 'TMDB_Credits_Datacleaning_Using_OpenRefine', 'TMDB_Credits_Datacleaning_Using_OpenRefine', 1, 38).
program(2, 'LoadDataUsingOpenRefine', 'TMDB_Credits_Datacleaning_Using_OpenRefine.LoadDataUsingOpenRefine', 5, 10).
program(3, 'IdentifyColumnsToCleanUsingOpenRefine', 'TMDB_Credits_Datacleaning_Using_OpenRefine.IdentifyColumnsToCleanUsingOpenRefine', 11, 16).
program(4, 'Create-CloneOfExistingColumn-Cast', 'TMDB_Credits_Datacleaning_Using_OpenRefine.Create-CloneOfExistingColumn-Cast', 17, 21).
program(5, 'Create-CloneOfExistingColumn-Crew', 'TMDB_Credits_Datacleaning_Using_OpenRefine.Create-CloneOfExistingColumn-Crew', 22, 26).
program(6, 'AddNewProcessedColumnsToCreditsDataset', 'TMDB_Credits_Datacleaning_Using_OpenRefine.AddNewProcessedColumnsToCreditsDataset', 27, 35).

% FACT: workflow(program_id).
workflow(1).

% FACT: function(program_id).

% FACT: has_subprogram(program_id, subprogram_id).
has_subprogram(1, 2).
has_subprogram(1, 3).
has_subprogram(1, 4).
has_subprogram(1, 5).
has_subprogram(1, 6).

% FACT: port(port_id, port_type, port_name, qualified_port_name, port_annotation_id, data_id).
port(1, 'in', 'tmdb_5000_credits.csv', 'TMDB_Credits_Datacleaning_Using_OpenRefine<-tmdb_5000_credits.csv', 3, 1).
port(15, 'out', 'tmdb_5000_credits_OpenRefineProcessed.csv', 'TMDB_Credits_Datacleaning_Using_OpenRefine->tmdb_5000_credits_OpenRefineProcessed.csv', 36, 9).
port(2, 'in', 'tmdb_5000_credits.csv', 'TMDB_Credits_Datacleaning_Using_OpenRefine.LoadDataUsingOpenRefine<-tmdb_5000_credits.csv', 7, 2).
port(3, 'out', 'credits_data_in_openrefine_workspace', 'TMDB_Credits_Datacleaning_Using_OpenRefine.LoadDataUsingOpenRefine->credits_data_in_openrefine_workspace', 9, 3).
port(4, 'in', 'credits_data_in_openrefine_workspace', 'TMDB_Credits_Datacleaning_Using_OpenRefine.IdentifyColumnsToCleanUsingOpenRefine<-credits_data_in_openrefine_workspace', 13, 3).
port(5, 'out', 'cast', 'TMDB_Credits_Datacleaning_Using_OpenRefine.IdentifyColumnsToCleanUsingOpenRefine->cast', 14, 4).
port(6, 'out', 'crew', 'TMDB_Credits_Datacleaning_Using_OpenRefine.IdentifyColumnsToCleanUsingOpenRefine->crew', 15, 5).
port(7, 'in', 'cast', 'TMDB_Credits_Datacleaning_Using_OpenRefine.Create-CloneOfExistingColumn-Cast<-cast', 19, 4).
port(8, 'out', 'cast_charactername_actorname', 'TMDB_Credits_Datacleaning_Using_OpenRefine.Create-CloneOfExistingColumn-Cast->cast_charactername_actorname', 20, 6).
port(9, 'in', 'crew', 'TMDB_Credits_Datacleaning_Using_OpenRefine.Create-CloneOfExistingColumn-Crew<-crew', 24, 5).
port(10, 'out', 'crew_crewname_job', 'TMDB_Credits_Datacleaning_Using_OpenRefine.Create-CloneOfExistingColumn-Crew->crew_crewname_job', 25, 7).
port(11, 'in', 'tmdb_5000_credits.csv', 'TMDB_Credits_Datacleaning_Using_OpenRefine.AddNewProcessedColumnsToCreditsDataset<-tmdb_5000_credits.csv', 29, 2).
port(12, 'in', 'cast_charactername_actorname', 'TMDB_Credits_Datacleaning_Using_OpenRefine.AddNewProcessedColumnsToCreditsDataset<-cast_charactername_actorname', 31, 6).
port(13, 'in', 'crew_crewname_job', 'TMDB_Credits_Datacleaning_Using_OpenRefine.AddNewProcessedColumnsToCreditsDataset<-crew_crewname_job', 32, 7).
port(14, 'out', 'tmdb_5000_credits_OpenRefineProcessed.csv', 'TMDB_Credits_Datacleaning_Using_OpenRefine.AddNewProcessedColumnsToCreditsDataset->tmdb_5000_credits_OpenRefineProcessed.csv', 33, 8).

% FACT: port_alias(port_id, alias).

% FACT: port_uri_template(port_id, uri).
port_uri_template(1, 'file://tmdb_5000_credits.csv').
port_uri_template(15, 'file://tmdb_5000_credits_OpenRefineProcessed.csv').
port_uri_template(2, 'file://tmdb_5000_credits.csv').
port_uri_template(11, 'file://tmdb_5000_credits.csv').
port_uri_template(14, 'file://tmdb_5000_credits_OpenRefineProcessed.csv').

% FACT: has_in_port(block_id, port_id).
has_in_port(1, 1).
has_in_port(2, 2).
has_in_port(3, 4).
has_in_port(4, 7).
has_in_port(5, 9).
has_in_port(6, 11).
has_in_port(6, 12).
has_in_port(6, 13).

% FACT: has_out_port(block_id, port_id).
has_out_port(1, 15).
has_out_port(2, 3).
has_out_port(3, 5).
has_out_port(3, 6).
has_out_port(4, 8).
has_out_port(5, 10).
has_out_port(6, 14).

% FACT: data(data_id, data_name, qualified_data_name).
data(1, 'tmdb_5000_credits.csv', '[tmdb_5000_credits.csv]').
data(9, 'tmdb_5000_credits_OpenRefineProcessed.csv', '[tmdb_5000_credits_OpenRefineProcessed.csv]').
data(2, 'tmdb_5000_credits.csv', 'TMDB_Credits_Datacleaning_Using_OpenRefine[tmdb_5000_credits.csv]').
data(3, 'credits_data_in_openrefine_workspace', 'TMDB_Credits_Datacleaning_Using_OpenRefine[credits_data_in_openrefine_workspace]').
data(4, 'cast', 'TMDB_Credits_Datacleaning_Using_OpenRefine[cast]').
data(5, 'crew', 'TMDB_Credits_Datacleaning_Using_OpenRefine[crew]').
data(6, 'cast_charactername_actorname', 'TMDB_Credits_Datacleaning_Using_OpenRefine[cast_charactername_actorname]').
data(7, 'crew_crewname_job', 'TMDB_Credits_Datacleaning_Using_OpenRefine[crew_crewname_job]').
data(8, 'tmdb_5000_credits_OpenRefineProcessed.csv', 'TMDB_Credits_Datacleaning_Using_OpenRefine[tmdb_5000_credits_OpenRefineProcessed.csv]').

% FACT: channel(channel_id, data_id).
channel(1, 2).
channel(2, 2).
channel(3, 3).
channel(4, 4).
channel(5, 5).
channel(6, 6).
channel(7, 7).
channel(8, 9).
channel(9, 1).
channel(10, 1).
channel(11, 8).

% FACT: port_connects_to_channel(port_id, channel_id).
port_connects_to_channel(2, 1).
port_connects_to_channel(11, 2).
port_connects_to_channel(3, 3).
port_connects_to_channel(4, 3).
port_connects_to_channel(5, 4).
port_connects_to_channel(7, 4).
port_connects_to_channel(6, 5).
port_connects_to_channel(9, 5).
port_connects_to_channel(8, 6).
port_connects_to_channel(12, 6).
port_connects_to_channel(10, 7).
port_connects_to_channel(13, 7).
port_connects_to_channel(14, 8).
port_connects_to_channel(2, 9).
port_connects_to_channel(11, 10).
port_connects_to_channel(14, 11).

% FACT: inflow_connects_to_channel(port_id, channel_id).
inflow_connects_to_channel(1, 1).
inflow_connects_to_channel(1, 2).
inflow_connects_to_channel(1, 9).
inflow_connects_to_channel(1, 10).

% FACT: outflow_connects_to_channel(port_id, channel_id).
outflow_connects_to_channel(15, 8).
outflow_connects_to_channel(15, 11).

% FACT: uri_variable(uri_variable_id, variable_name, port_id).

% FACT: log_template(log_template_id, port_id, entry_template, log_annotation_id).

% FACT: log_template_variable(log_variable_id, variable_name, log_template_id).

% FACT: extract_source(source_id, source_path).
extract_source(1, '').

% FACT: annotation(annotation_id, source_id, line_number, tag, keyword, value).
annotation(1, 1, 2, 'begin', '@begin', 'TMDB_Credits_Datacleaning_Using_OpenRefine').
annotation(2, 1, 2, 'desc', '@desc', 'Cleaning movies dataset using OpenRefine tool').
annotation(3, 1, 3, 'in', '@in', 'tmdb_5000_credits.csv').
annotation(4, 1, 3, 'uri', '@uri', 'file://tmdb_5000_credits.csv').
annotation(5, 1, 6, 'begin', '@begin', 'LoadDataUsingOpenRefine').
annotation(6, 1, 6, 'desc', '@desc', 'Use OpenRefine to clean tmdb_5000_movies.csv').
annotation(7, 1, 7, 'in', '@in', 'tmdb_5000_credits.csv').
annotation(8, 1, 7, 'uri', '@uri', 'file://tmdb_5000_credits.csv').
annotation(9, 1, 8, 'out', '@out', 'credits_data_in_openrefine_workspace').
annotation(10, 1, 9, 'end', '@end', 'LoadDataUsingOpenRefine').
annotation(11, 1, 11, 'begin', '@begin', 'IdentifyColumnsToCleanUsingOpenRefine').
annotation(12, 1, 11, 'desc', '@desc', 'Use OpenRefine to clean tmdb_5000_movies.csv').
annotation(13, 1, 12, 'in', '@in', 'credits_data_in_openrefine_workspace').
annotation(14, 1, 13, 'out', '@out', 'cast').
annotation(15, 1, 14, 'out', '@out', 'crew').
annotation(16, 1, 15, 'end', '@end', 'IdentifyColumnsToCleanUsingOpenRefine').
annotation(17, 1, 17, 'begin', '@begin', 'Create-CloneOfExistingColumn-Cast').
annotation(18, 1, 17, 'desc', '@desc', 'Add new column with colon seperated crew names').
annotation(19, 1, 18, 'in', '@in', 'cast').
annotation(20, 1, 19, 'out', '@out', 'cast_charactername_actorname').
annotation(21, 1, 20, 'end', '@end', 'Create-CloneOfExistingColumn-Cast').
annotation(22, 1, 22, 'begin', '@begin', 'Create-CloneOfExistingColumn-Crew').
annotation(23, 1, 22, 'desc', '@desc', 'Add new column with colon seperated crew names').
annotation(24, 1, 23, 'in', '@in', 'crew').
annotation(25, 1, 24, 'out', '@out', 'crew_crewname_job').
annotation(26, 1, 25, 'end', '@end', 'Create-CloneOfExistingColumn-Crew').
annotation(27, 1, 27, 'begin', '@begin', 'AddNewProcessedColumnsToCreditsDataset').
annotation(28, 1, 27, 'desc', '@desc', 'Add 'cast_charactername_actorname' and 'crew_crewname_job' to tmdb_5000_credits.csv').
annotation(29, 1, 28, 'in', '@in', 'tmdb_5000_credits.csv').
annotation(30, 1, 28, 'uri', '@uri', 'file://tmdb_5000_credits.csv').
annotation(31, 1, 29, 'in', '@in', 'cast_charactername_actorname').
annotation(32, 1, 30, 'in', '@in', 'crew_crewname_job').
annotation(33, 1, 31, 'out', '@out', 'tmdb_5000_credits_OpenRefineProcessed.csv').
annotation(34, 1, 31, 'uri', '@uri', 'file://tmdb_5000_credits_OpenRefineProcessed.csv').
annotation(35, 1, 32, 'end', '@end', 'AddNewProcessedColumnsToCreditsDataset').
annotation(36, 1, 34, 'out', '@out', 'tmdb_5000_credits_OpenRefineProcessed.csv').
annotation(37, 1, 34, 'uri', '@uri', 'file://tmdb_5000_credits_OpenRefineProcessed.csv').
annotation(38, 1, 36, 'end', '@end', 'TMDB_Credits_Datacleaning_Using_OpenRefine').

% FACT: annotation_qualifies(qualifying_annotation_id, primary_annotation_id).
annotation_qualifies(2, 1).
annotation_qualifies(4, 3).
annotation_qualifies(6, 5).
annotation_qualifies(8, 7).
annotation_qualifies(12, 11).
annotation_qualifies(18, 17).
annotation_qualifies(23, 22).
annotation_qualifies(28, 27).
annotation_qualifies(30, 29).
annotation_qualifies(34, 33).
annotation_qualifies(37, 36).
