
/* Start of top-level graph */
digraph Workflow {
rankdir=TB

/* Title for graph */
fontname=Helvetica; fontsize=18; labelloc=t
label=TMDB_Movies_DataCleaning_Using_Pandas

/* Start of double cluster for drawing box around nodes in workflow */
subgraph cluster_workflow_box_outer { label=""; color=black; penwidth=2
subgraph cluster_workflow_box_inner { label=""; penwidth=0

/* Style for nodes representing atomic programs in workflow */
node[shape=box style=filled fillcolor="#CCFFCC" peripheries=1 fontname=Helvetica]

/* Nodes representing atomic programs in workflow */
LoadDataUsingPandas [shape=record rankdir=LR label="{<f0> LoadDataUsingPandas |<f1> Use OpenRefine to clean tmdb_5000_movies-OpenRefineProcessed.csv}"];
IdentifyColumnsToProcessUsingPandas [shape=record rankdir=LR label="{<f0> IdentifyColumnsToProcessUsingPandas |<f1> Use OpenRefine to clean tmdb_5000_movies.csv}"];
CreateBinaryEncodedColumnsForEachGenre [shape=record rankdir=LR label="{<f0> CreateBinaryEncodedColumnsForEachGenre |<f1> Use OpenRefine to clean tmdb_5000_movies.csv}"];
AddNewProcessedColumnsToCreditsDataset [shape=record rankdir=LR label="{<f0> AddNewProcessedColumnsToCreditsDataset |<f1> Add binary-encoded dereived columns from 'genres' and updated 'release date' to the movie dataset}"];

/* Style for nodes representing composite programs (sub-workflows) in workflow */
node[shape=box style=filled fillcolor="#CCFFCC" peripheries=2 fontname=Helvetica]

/* Nodes representing composite programs (sub-workflows) in workflow */
FetchCorrectReleaseDataUsingTmdbAPI [shape=record rankdir=LR label="{<f0> FetchCorrectReleaseDataUsingTmdbAPI |<f1> using grel\:foreach method}"];

/* Style for nodes representing non-parameter data channels in workflow */
node[shape=box style="rounded,filled" fillcolor="#FFFFCC" peripheries=1 fontname=Helvetica]

/* Nodes for non-parameter data channels in workflow */
"tmdb_5000_movies-OpenRefineProcessed.csv" [shape=record rankdir=LR label="{<f0> tmdb_5000_movies-OpenRefineProcessed.csv |<f1> file\://tmdb_5000_movies-OpenRefineProcessed.csv}"];
movies_data_in_pandas_dataframe
genres
release_date
genre_type_action
genre_type_adventure
"...17_others..."
genre_type_war
genre_type_western
"tmdb_5000_movies-OpenRefine-Pandas-Processed.csv" [shape=record rankdir=LR label="{<f0> tmdb_5000_movies-OpenRefine-Pandas-Processed.csv |<f1> file\://tmdb_5000_movies-OpenRefine-Pandas-Processed.csv}"];

/* Style for nodes representing parameter channels in workflow */
node[shape=box style="rounded,filled" fillcolor="#FCFCFC" peripheries=1 fontname=Helvetica]

/* Nodes representing parameter channels in workflow */

/* Edges representing connections between programs and channels */
LoadDataUsingPandas -> movies_data_in_pandas_dataframe
"tmdb_5000_movies-OpenRefineProcessed.csv" -> LoadDataUsingPandas
IdentifyColumnsToProcessUsingPandas -> genres
IdentifyColumnsToProcessUsingPandas -> release_date
movies_data_in_pandas_dataframe -> IdentifyColumnsToProcessUsingPandas
CreateBinaryEncodedColumnsForEachGenre -> genre_type_action
CreateBinaryEncodedColumnsForEachGenre -> genre_type_adventure
CreateBinaryEncodedColumnsForEachGenre -> "...17_others..."
CreateBinaryEncodedColumnsForEachGenre -> genre_type_war
CreateBinaryEncodedColumnsForEachGenre -> genre_type_western
genres -> CreateBinaryEncodedColumnsForEachGenre
FetchCorrectReleaseDataUsingTmdbAPI -> release_date
release_date -> FetchCorrectReleaseDataUsingTmdbAPI
AddNewProcessedColumnsToCreditsDataset -> "tmdb_5000_movies-OpenRefine-Pandas-Processed.csv"
"tmdb_5000_movies-OpenRefineProcessed.csv" -> AddNewProcessedColumnsToCreditsDataset
genre_type_action -> AddNewProcessedColumnsToCreditsDataset
genre_type_adventure -> AddNewProcessedColumnsToCreditsDataset
"...17_others..." -> AddNewProcessedColumnsToCreditsDataset
genre_type_war -> AddNewProcessedColumnsToCreditsDataset
genre_type_western -> AddNewProcessedColumnsToCreditsDataset
release_date -> AddNewProcessedColumnsToCreditsDataset

/* End of double cluster for drawing box around nodes in workflow */
}}

/* Style for nodes representing workflow input ports */
node[shape=circle style="rounded,filled" fillcolor="#FFFFFF" peripheries=1 fontname=Helvetica width=0.2]

/* Nodes representing workflow input ports */
"tmdb_5000_movies-OpenRefineProcessed.csv_input_port" [label=""]

/* Style for nodes representing workflow output ports */
node[shape=circle style="rounded,filled" fillcolor="#FFFFFF" peripheries=1 fontname=Helvetica width=0.2]

/* Nodes representing workflow output ports */
"tmdb_5000_movies-OpenRefine-Pandas-Processed.csv_output_port" [label=""]

/* Edges from input ports to channels */
"tmdb_5000_movies-OpenRefineProcessed.csv_input_port" -> "tmdb_5000_movies-OpenRefineProcessed.csv"

/* Edges from channels to output ports */
"tmdb_5000_movies-OpenRefine-Pandas-Processed.csv" -> "tmdb_5000_movies-OpenRefine-Pandas-Processed.csv_output_port"

/* End of top-level graph */
}
