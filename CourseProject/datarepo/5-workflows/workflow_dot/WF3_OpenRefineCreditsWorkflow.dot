
/* Start of top-level graph */
digraph Workflow {
rankdir=TB

/* Title for graph */
fontname=Helvetica; fontsize=18; labelloc=t
label=TMDB_Credits_Datacleaning_Using_OpenRefine

/* Start of double cluster for drawing box around nodes in workflow */
subgraph cluster_workflow_box_outer { label=""; color=black; penwidth=2
subgraph cluster_workflow_box_inner { label=""; penwidth=0

/* Style for nodes representing atomic programs in workflow */
node[shape=box style=filled fillcolor="#CCFFCC" peripheries=1 fontname=Helvetica]

/* Nodes representing atomic programs in workflow */
LoadDataUsingOpenRefine [shape=record rankdir=LR label="{<f0> LoadDataUsingOpenRefine |<f1> Use OpenRefine to clean tmdb_5000_movies.csv}"];
IdentifyColumnsToCleanUsingOpenRefine [shape=record rankdir=LR label="{<f0> IdentifyColumnsToCleanUsingOpenRefine |<f1> Use OpenRefine to clean tmdb_5000_movies.csv}"];
"Create-CloneOfExistingColumn-Cast" [shape=record rankdir=LR label="{<f0> Create-CloneOfExistingColumn-Cast |<f1> Add new column with colon seperated crew names}"];
"Create-CloneOfExistingColumn-Crew" [shape=record rankdir=LR label="{<f0> Create-CloneOfExistingColumn-Crew |<f1> Add new column with colon seperated crew names}"];
AddNewProcessedColumnsToCreditsDataset [shape=record rankdir=LR label="{<f0> AddNewProcessedColumnsToCreditsDataset |<f1> Add 'cast_charactername_actorname' and 'crew_crewname_job' to tmdb_5000_credits.csv}"];

/* Style for nodes representing non-parameter data channels in workflow */
node[shape=box style="rounded,filled" fillcolor="#FFFFCC" peripheries=1 fontname=Helvetica]

/* Nodes for non-parameter data channels in workflow */
"tmdb_5000_credits.csv" [shape=record rankdir=LR label="{<f0> tmdb_5000_credits.csv |<f1> file\://tmdb_5000_credits.csv}"];
credits_data_in_openrefine_workspace
cast
crew
cast_charactername_actorname
crew_crewname_job
"tmdb_5000_credits_OpenRefineProcessed.csv" [shape=record rankdir=LR label="{<f0> tmdb_5000_credits_OpenRefineProcessed.csv |<f1> file\://tmdb_5000_credits_OpenRefineProcessed.csv}"];

/* Style for nodes representing parameter channels in workflow */
node[shape=box style="rounded,filled" fillcolor="#FCFCFC" peripheries=1 fontname=Helvetica]

/* Nodes representing parameter channels in workflow */

/* Edges representing connections between programs and channels */
LoadDataUsingOpenRefine -> credits_data_in_openrefine_workspace
"tmdb_5000_credits.csv" -> LoadDataUsingOpenRefine
IdentifyColumnsToCleanUsingOpenRefine -> cast
IdentifyColumnsToCleanUsingOpenRefine -> crew
credits_data_in_openrefine_workspace -> IdentifyColumnsToCleanUsingOpenRefine
"Create-CloneOfExistingColumn-Cast" -> cast_charactername_actorname
cast -> "Create-CloneOfExistingColumn-Cast"
"Create-CloneOfExistingColumn-Crew" -> crew_crewname_job
crew -> "Create-CloneOfExistingColumn-Crew"
AddNewProcessedColumnsToCreditsDataset -> "tmdb_5000_credits_OpenRefineProcessed.csv"
"tmdb_5000_credits.csv" -> AddNewProcessedColumnsToCreditsDataset
cast_charactername_actorname -> AddNewProcessedColumnsToCreditsDataset
crew_crewname_job -> AddNewProcessedColumnsToCreditsDataset

/* End of double cluster for drawing box around nodes in workflow */
}}

/* Style for nodes representing workflow input ports */
node[shape=circle style="rounded,filled" fillcolor="#FFFFFF" peripheries=1 fontname=Helvetica width=0.2]

/* Nodes representing workflow input ports */
"tmdb_5000_credits.csv_input_port" [label=""]

/* Style for nodes representing workflow output ports */
node[shape=circle style="rounded,filled" fillcolor="#FFFFFF" peripheries=1 fontname=Helvetica width=0.2]

/* Nodes representing workflow output ports */
"tmdb_5000_credits_OpenRefineProcessed.csv_output_port" [label=""]

/* Edges from input ports to channels */
"tmdb_5000_credits.csv_input_port" -> "tmdb_5000_credits.csv"

/* Edges from channels to output ports */
"tmdb_5000_credits_OpenRefineProcessed.csv" -> "tmdb_5000_credits_OpenRefineProcessed.csv_output_port"

/* End of top-level graph */
}
